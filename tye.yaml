# tye application configuration file
# read all about it at https://github.com/dotnet/tye
#
# when you've given us a try, we'd love to know what you think:
#    https://aka.ms/AA7q20u
#
name: daprmicrostore
extensions:
  - name: dapr
  
    # log-level configures the log level of the dapr sidecar
    log-level: debug
  
    # config allows you to pass additional configuration into the dapr sidecar
    # config will be interpreted as a named k8s resource when deployed, and will be interpreted as
    # a file on disk when running locally at `./components/myconfig.yaml`
    #
    config: appconfig

    # components-path configures the components path of the dapr sidecard
    components-path: "./components/"

  # - name: zipkin
  # - name: elastic
  #   logPath: ./.logs
          

services:
- name: webapp
  project: webapp/webapp.csproj
- name: products
  project: products/products.csproj
- name: bookings
  project: bookings/bookings.csproj
- name: notifications
  project: notifications/notifications.csproj
- name: redis
  image: redis
  bindings: 
  - port: 6379

# There may be a problem with Tye and Kafka when running locally.
# If that's the case then comment out and use:
# docker-compose -f ./docker-compose-single-kafka.yml up -d
# - name: zookeeper
#   image: wurstmeister/zookeeper:latest
#   bindings:
#     - port: 2181
#       containerPort: 2181
# - name: kafka
#   image: wurstmeister/kafka:latest
#   bindings:
#     - port: 9092
#       containerPort: 9092
#   env:
#     - name: KAFKA_ADVERTISED_HOST_NAME
#       value: 127.0.0.1
#     - name: KAFKA_CREATE_TOPICS
#       value: notifications:1:1
#     - name: KAFKA_ZOOKEEPER_CONNECT
#       value: zookeeper:2181
