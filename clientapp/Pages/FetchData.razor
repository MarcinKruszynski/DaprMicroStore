@page "/fetchdata"
@inject HttpClient Http

@using clientapp.Model

<h1>Products</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Price</th>
                <th>StockQuantity</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.StockQuantity</td>
                    <td>
                        <button class="btn btn-primary" @onclick="@(() => Book(product))">BOOK</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private const string GatewayApiUrl = "http://localhost:8080";
    private ProductItem[] products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<ProductItem[]>($"{GatewayApiUrl}/api/v1/p/list");
    }

    public async Task Book(ProductItem product)
    {
        var guid = Guid.NewGuid().ToString();

        var data = new BookingCheckout {
            RequestId = guid,
            ProductId = product.Id,
            ProductName = product.Name,
            UnitPrice = product.Price,
            Quantity = 1
        };        
        
        await Http.PostAsJsonAsync($"{GatewayApiUrl}/api/v1/b/checkout", data);  
    }
}
